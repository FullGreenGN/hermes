name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - 'main'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Fix for Rollup platform-specific binaries issue
      - name: Install dependencies
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            # Remove node_modules and package-lock.json to avoid optional dependency issues on Linux
            rm -rf node_modules package-lock.json
            npm install
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # Windows requires different handling for removing files
            rm -rf node_modules package-lock.json || true
            npm install
          else
            # macOS - regular install should work
            npm ci
          fi

      - name: Build app
        run: npm run build

      - name: Build app for distribution
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            npm run build:linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            npm run build:mac
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            npm run build:win
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.dmg
            dist/*.exe
            dist/latest*.yml
            dist/*.blockmap
            dist/*.zip
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
